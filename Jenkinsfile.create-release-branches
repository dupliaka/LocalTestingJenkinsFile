@Library('jenkins-pipeline-shared-libraries') _

CREATE_RELEASE_BRANCHES = 'create-release-branches'
CUSTOM_BASES=['optaplanner-quickstarts':'development','kogito-pipelines':'master']

pipeline {
    agent {
        label 'master'
    }
    environment {
        CUSTOM_BASES = getCustomBasesMap()
    }
    parameters {
        string(name: 'CUSTOM_BASE_NAME', defaultValue: '', description: '')
    }

    stages {
        stage('Initialize') {
            steps {
                script {
                    def branchName = getBranch("kogito-runtimes")
                    echo "Branchname: ${branchName}"
                }
            }
        }
    }
}


String getBranch(String repo) {
    return (env.CUSTOM_BASES && env.CUSTOM_BASES.containsKey(repo))?env.CUSTOM_BASES.get(repo):env.BASE_BRANCH;
}

def getCustomBasesMap() {
    def mapCustomBases=[:]
    if (params.CUSTOM_BASES) {
        mapCustomBases = params.CUSTOM_BASES[1..-2]
                .split(', ')
                .collectEntries { entry ->
                    def pair = entry.split(':')
                    [(pair.first()): pair.last()]
                }
    }
    return mapCustomBases
}